{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "stage": {
      "type": "string",
      "metadata": {
        "description": "The stage you are deploying into. Usually one of dev, test, uat or prod"
      }
    },
    "clusterNameSuffix": {
      "type": "string",
      "defaultValue": "aks",
      "metadata": {
        "description": "The name of the Managed Cluster resource."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of AKS resource."
      }
    },
    "osDiskSizeGB": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
      },
      "minValue": 0,
      "maxValue": 1023
    },
    "masterCount": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "The number of master nodes for the cluster."
      },
      "minValue": 3,
      "maxValue": 10
    },
    "agentCount": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "The number of agent nodes for the cluster."
      },
      "minValue": 1,
      "maxValue": 50
    },
    "masterVMSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v3",
      "metadata": {
        "description": "The size of the Virtual Machine."
      }
    },
    "agentVMSize": {
      "type": "string",
      "defaultValue": "Standard_F8s",
      "metadata": {
        "description": "The size of the Virtual Machine."
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines."
      }
    },
    "sshRSAPublicKey": {
      "type": "securestring",
      "metadata": {
        "description": "Configure all linux machines with the SSH RSA public key string.  Your key should include three parts, for example 'ssh-rsa AAAAB...snip...UcyupgH azureuser@linuxvm'"
      }
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "Client ID (used by cloudprovider)"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "osType": {
      "type": "string",
      "defaultValue": "Linux",
      "allowedValues": ["Linux"],
      "metadata": {
        "description": "The type of operating system."
      }
    },
    "kubernetesVersion": {
      "type": "string",
      "defaultValue": "1.11.2",
      "metadata": {
        "description": "The version of Kubernetes."
      }
    },
    "enableOmsAgent": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "boolean flag to turn on and off of omsagent addon"
      }
    },
    "enableHttpApplicationRouting": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "boolean flag to turn on and off of http application routing"
      }
    },
    "networkPlugin": {
      "type": "string",
      "allowedValues": ["azure", "kubenet"],
      "metadata": {
        "description": "Network plugin used for building Kubernetes network."
      }
    },
    "maxPods": {
      "type": "int",
      "defaultValue": 30,
      "metadata": {
        "description": "Maximum number of pods that can run on a node."
      }
    },
    "enableRBAC": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "boolean flag to turn on and off of RBAC"
      }
    },

    "serviceCidr": {
      "type": "string",
      "metadata": {
        "description": "A CIDR notation IP range from which to assign service cluster IPs."
      }
    },
    "dnsServiceIP": {
      "type": "string",
      "metadata": {
        "description": "Containers DNS server IP address."
      }
    },
    "dockerBridgeCidr": {
      "type": "string",
      "metadata": {
        "description": "A CIDR notation IP for Docker bridge."
      }
    }
  },
  "variables": {
    "vnetSubnetID": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/rlad-application-', parameters('location'), '-rg/providers/Microsoft.Network/virtualNetworks/rlad-', parameters('stage'), '-kubernetes-vnet/subnets/rlad-kubernetes-nodes-subnet')]",
    "omsWorkspaceName": "[concat('rlad-', parameters('stage'), '-oms')]",
    "resourceName": "[concat('rlad-', parameters('stage'), '-', parameters('clusterNameSuffix'))]",
    "agentsEndpointDNSNamePrefix": "[concat('rlad-', parameters('stage'), '-', parameters('clusterNameSuffix'), '-agents')]",
    "masterEndpointDNSNamePrefix": "[concat('rlad-', parameters('stage'), '-', parameters('clusterNameSuffix'))]"
  },
  "resources": [
    {
      "apiVersion": "2018-03-31",
      "type": "Microsoft.ContainerService/managedClusters",
      "location": "[parameters('location')]",
      "name": "[variables('resourceName')]",
      "properties": {
        "kubernetesVersion": "[parameters('kubernetesVersion')]",
        "enableRBAC": "[parameters('enableRBAC')]",
        "dnsPrefix": "[variables('masterEndpointDNSNamePrefix')]",
        "addonProfiles": {
          "httpApplicationRouting": {
            "enabled": "[parameters('enableHttpApplicationRouting')]"
          },
          "omsagent": {
            "enabled": "[parameters('enableOmsAgent')]",
            "config": {
              "logAnalyticsWorkspaceResourceID": "[resourceId('rlad-storage-westus-rg', 'Microsoft.OperationalInsights/workspaces', variables('omsWorkspaceName'))]"
            }
          }
        },
        "masterProfile": {
          "count": "[parameters('masterCount')]",
          "vmSize": "[parameters('masterVMSize')]",
          "dnsPrefix": "[variables('masterEndpointDNSNamePrefix')]"
        },
        "agentPoolProfiles": [
          {
            "name": "pool",
            "vmSize": "[parameters('agentVMSize')]",
            "dnsPrefix": "[variables('agentsEndpointDNSNamePrefix')]",
            "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
            "count": "[parameters('agentCount')]",
            "osType": "[parameters('osType')]",
            "storageProfile": "ManagedDisks",
            "maxPods": "[parameters('maxPods')]",
            "vnetSubnetID": "[variables('vnetSubnetID')]"
          }
        ],
        "servicePrincipalProfile": {
          "ClientId": "[parameters('servicePrincipalClientId')]",
          "Secret": "[parameters('servicePrincipalClientSecret')]"
        },
        "linuxProfile": {
          "adminUsername": "[parameters('adminUsername')]",
          "ssh": {
            "publicKeys": [
              {
                "keyData": "[parameters('sshRSAPublicKey')]"
              }
            ]
          }
        },
        "networkProfile": {
          "networkPlugin": "[parameters('networkPlugin')]",
          "serviceCidr": "[parameters('serviceCidr')]",
          "dnsServiceIP": "[parameters('dnsServiceIP')]",
          "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]"
        }
      },
      "tags": {}
    }
  ],
  "outputs": {
    "controlPlaneFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', variables('resourceName'))).fqdn]"
    }
  }
}

