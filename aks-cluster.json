{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "The tags to be applied to the deployed Redis cache."
      }
    },
    "name": {
      "type": "string",
      "defaultValue": "aks",
      "metadata": {
        "description": "The name of the Managed Cluster resource."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of AKS resource."
      }
    },
    "osDiskSizeGB": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
      },
      "minValue": 0,
      "maxValue": 1023
    },
    "masterCount": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "The number of master nodes for the cluster."
      },
      "minValue": 3,
      "maxValue": 10
    },
    "agentCount": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "The number of agent nodes for the cluster."
      },
      "minValue": 1,
      "maxValue": 50
    },
    "masterVMSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v3",
      "metadata": {
        "description": "The size of the Virtual Machine."
      }
    },
    "agentVMSize": {
      "type": "string",
      "defaultValue": "Standard_F8s",
      "metadata": {
        "description": "The size of the Virtual Machine."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Linux Virtual Machines."
      }
    },
    "sshKey": {
      "type": "string",
      "metadata": {
        "description": "The public key that will allow SSH admin access to the virtual machine"
      }
    },
    "keyVaultServicePrincipalSecret": {
      "type": "securestring",
      "metadata": {
        "description": "The secret of the service principal to grant access to the key vault"
      }
    },
    "keyVaultServicePrincipalApplicationId": {
      "type": "securestring",
      "metadata": {
        "description": "The application ID of the service principal to grant access to the key vault"
      }
    },
    "osType": {
      "type": "string",
      "defaultValue": "Linux",
      "allowedValues": ["Linux"],
      "metadata": {
        "description": "The type of operating system."
      }
    },
    "kubernetesVersion": {
      "type": "string",
      "defaultValue": "1.11.2",
      "metadata": {
        "description": "The version of Kubernetes."
      }
    },
    "enableOmsAgent": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Boolean flag to turn on and off of omsagent addon."
      }
    },
    "omsWorkspaceResourceId": {
      "type": "string",
      "metadata": {
        "description": "Specify the resource id of the OMS workspace."
      }
    },
    "networkPlugin": {
      "type": "string",
      "allowedValues": ["azure", "kubenet"],
      "metadata": {
        "description": "Network plugin used for building Kubernetes network."
      }
    },
    "maxPods": {
      "type": "int",
      "defaultValue": 30,
      "metadata": {
        "description": "Maximum number of pods that can run on a node."
      }
    },
    "enableRBAC": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Boolean flag to turn on and off of RBAC."
      }
    },
    "serviceCidr": {
      "type": "string",
      "metadata": {
        "description": "A CIDR notation IP range from which to assign service cluster IPs."
      }
    },
    "dnsServiceIP": {
      "type": "string",
      "metadata": {
        "description": "Containers DNS server IP address."
      }
    },
    "dockerBridgeCidr": {
      "type": "string",
      "metadata": {
        "description": "A CIDR notation IP for Docker bridge."
      }
    },
    "subnetResourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource id of the subnet in which to deploy as part of the build pipeline."
      }
    }
  },
  "variables": {
    "vnetSubnetID": "[parameters('subnetResourceId')]",
    "agentsEndpointDNSNamePrefix": "[concat(parameters('name'), '-agents')]",
    "masterEndpointDNSNamePrefix": "[parameters('name')]"
  },
  "resources": [
    {
      "apiVersion": "2018-03-31",
      "type": "Microsoft.ContainerService/managedClusters",
      "location": "[parameters('location')]",
      "name": "[parameters('name')]",
      "properties": {
        "kubernetesVersion": "[parameters('kubernetesVersion')]",
        "enableRBAC": "[parameters('enableRBAC')]",
        "dnsPrefix": "[variables('masterEndpointDNSNamePrefix')]",
        "addonProfiles": {
          "omsagent": {
            "enabled": "[parameters('enableOmsAgent')]",
            "config": {
              "logAnalyticsWorkspaceResourceID": "[parameters('omsWorkspaceResourceId')]"
            }
          }
        },
        "masterProfile": {
          "count": "[parameters('masterCount')]",
          "vmSize": "[parameters('masterVMSize')]",
          "dnsPrefix": "[variables('masterEndpointDNSNamePrefix')]"
        },
        "agentPoolProfiles": [
          {
            "name": "pool",
            "vmSize": "[parameters('agentVMSize')]",
            "dnsPrefix": "[variables('agentsEndpointDNSNamePrefix')]",
            "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
            "count": "[parameters('agentCount')]",
            "osType": "[parameters('osType')]",
            "storageProfile": "ManagedDisks",
            "maxPods": "[parameters('maxPods')]",
            "vnetSubnetID": "[variables('vnetSubnetID')]"
          }
        ],
        "servicePrincipalProfile": {
          "clientId": "[parameters('keyVaultServicePrincipalApplicationId')]",
          "Secret": "[parameters('keyVaultServicePrincipalSecret')]"
        },
        "linuxProfile": {
          "adminUsername": "[parameters('adminUsername')]",
          "ssh": {
            "publicKeys": [
              {
                "keyData": "[parameters('sshKey')]"
              }
            ]
          }
        },
        "networkProfile": {
          "networkPlugin": "[parameters('networkPlugin')]",
          "serviceCidr": "[parameters('serviceCidr')]",
          "dnsServiceIP": "[parameters('dnsServiceIP')]",
          "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]"
        }
      },
      "tags": {}
    }
  ],
  "outputs": {
    "controlPlaneFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', parameters('name'))).fqdn]"
    },
    "resourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.ContainerService/managedClusters', parameters('name'))]"
    }
  }
}

